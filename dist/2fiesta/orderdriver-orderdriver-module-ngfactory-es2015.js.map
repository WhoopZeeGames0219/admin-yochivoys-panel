{"version":3,"sources":["./node_modules/ng2-toasty/src/toast.component.d.ts.ToastComponent.html","./node_modules/ng2-toasty/src/toasty.component.d.ts.ToastyComponent.html","./src/app/orderdriver/orderdriver-routing.module.ts","./src/app/orderdriver/orderdriver.component.html","./src/app/orderdriver/orderdriver.component.ts","./src/app/orderdriver/orderdriver.module.ts","./src/app/services/util.service.ts"],"names":[],"mappings":"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","file":"orderdriver-orderdriver-module-ngfactory-es2015.js","sourcesContent":["\n        <div class=\"toast\" [ngClass]=\"[toast.type, toast.theme]\">\n            <div *ngIf=\"toast.showClose\" class=\"close-button\" (click)=\"close($event)\"></div>\n            <div *ngIf=\"toast.title || toast.msg\" class=\"toast-text\">\n                <span *ngIf=\"toast.title\" class=\"toast-title\" [innerHTML]=\"toast.title | safeHtml\"></span>\n                <br *ngIf=\"toast.title && toast.msg\" />\n                <span *ngIf=\"toast.msg\" class=\"toast-msg\" [innerHtml]=\"toast.msg | safeHtml\"></span>\n            </div>\n        </div>","\n    <div id=\"toasty\" [ngClass]=\"[position]\">\n        <ng2-toast *ngFor=\"let toast of toasts\" [toast]=\"toast\" (closeToast)=\"closeToast(toast)\"></ng2-toast>\n    </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderdriverComponent } from './orderdriver.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderdriverComponent,\n    data: {\n      breadcrumb: 'Order Driver'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderdriverRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n  <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\n</ngx-spinner>\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"card\" id=\"card\">\n      <div class=\"card-body\">\n        <h5>{{'Orden a entregar' | translate}}</h5>\n        <div class=\"orders\">\n          <div class=\"card_div\">\n\n            <div class=\"resto_detail\">\n              <div class=\"back_image\" [style.backgroundImage]=\"'url('+restCover+')'\"\n                style=\"border-radius:50%;object-fit:cover;\"></div>\n              <div style=\"margin-left: 20px;\">\n                <p class=\"res_name\" style=\"font-size: 16px; font-weight: bold;\">{{restName}}</p>\n                <p class=\"\">\n                  {{address}}\n                </p>\n              </div>\n\n              <div style=\"text-align: center;margin: 10px;\">\n                <div class=\"ti-angle-double-right\"></div>\n              </div>\n\n              <div class=\"back_image\" [style.backgroundImage]=\"'url('+userpic+')'\"\n                style=\"border-radius:50%;object-fit:cover;\"></div>\n              <div style=\"margin-left: 20px;\">\n                <p class=\"res_name\" style=\"font-size: 16px; font-weight: bold;\">{{username}}</p>\n                <p class=\"\">\n                  {{userAddress}}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"line_div\"></div>\n\n            <div class=\"order_detail\">\n              <p class=\"head_gray\" style=\"color: #490608; font-size: 16px; font-weight: bold;\">{{'ITEMS' | translate}}\n              </p>\n              <div class=\"small_lbl\">\n                <!-- <span *ngFor=\"let order of orders;let ol = index\">{{order.quantiy}}\n                                    X {{order.name}} </span> -->\n                <span *ngFor=\"let order of orders;let ol = index\">\n                  <div *ngIf=\"!order.selectedItem || !order.selectedItem.length\" class=\"border_bottom\">\n                    {{order.name}} X {{order.quantiy}} <span *ngIf=\"ol !=order.length\">,</span>\n                  </div>\n\n                  <div *ngFor=\"let subItems of order.selectedItem;let j = index\" class=\"subNames\">\n                    <p class=\"food_title\">{{order.name}} X {{order.selectedItem[j].total}}</p>\n                    <div *ngFor=\"let addods of subItems.item\" class=\"flex_titles\">\n                      <p class=\"sub_name\">\n                        - {{addods.name}}\n                      </p>\n                      <p class=\"sub_name\">\n                        {{getCurrency()}} {{addods.value}}\n                      </p>\n                    </div>\n                  </div>\n                </span>\n              </div>\n              <p class=\"head_gray\" style=\"color: #490608; font-size: 16px; font-weight: bold;\">{{'ORDERED ON'|\n                translate}}</p>\n              <p class=\"small_lbl\" style=\"font-size: 16px;\">{{getDate(time)}} </p>\n              <p class=\"head_gray\" *ngIf=\"coupon\">{{'Discount'| translate}}</p>\n              <p class=\"small_lbl\" *ngIf=\"coupon\">{{getCurrency()}} {{dicount}}\n              </p>\n              <p class=\"head_gray\" style=\"color: #490608; font-size: 16px; font-weight: bold;\">{{'TOTAL AMOUNT'|\n                translate}}</p>\n              <p class=\"small_lbl\" style=\"font-size: 16px;\"> {{getCurrency()}} {{grandTotal}}</p>\n            </div>\n\n            <div class=\"line_div\"></div>\n\n            <div class=\"status_detail\" *ngIf=\"status =='completed' || status == 'delivered'\">\n              <div class=\"deliver_div\" style=\"color: green; font-weight: bold; font-size: 16px;\">\n                {{'Delivered' | translate}}\n              </div>\n            </div>\n            <div class=\"status_detail\" *ngIf=\"status =='rejected' || status == 'cancel'\">\n              <div class=\"deliver_div\" style=\"color: red; font-weight: bold; font-size: 16px;\">\n                {{'Your Order is' | translate}} {{status}}\n              </div>\n            </div>\n            <div class=\"status_detail\" *ngIf=\"status =='created' || status =='ongoing' || status === 'accepted'\">\n              <div class=\"deliver_div\" style=\"color: rgb(170, 170, 10); font-weight: bold; font-size: 16px;\">\n                {{'Your Order is' | translate}} {{status}}\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card\" id=\"card\">\n      <div class=\"card-body\">\n        <h5>{{'Selecciona un repartidor' | translate}}</h5>\n        <div class=\"card_div\">\n          <div class=\"form-group row\">\n            <div class=\"col-sm-6\">\n              <label>{{'Driver' | translate}}</label>\n              <select [(ngModel)]=\"driver\" class=\"form-control\">\n                <option *ngFor=\"let item of drivers;let i = index\" value=\"{{item.id}}\">{{item.fullname}}\n                </option>\n              </select>\n            </div>\n            <div class=\"col-sm-6\" style=\"margin-top: 20px;\"><button type=\"button\"\n                class=\"btn btn-danger rounded font-weight-bold\" (click)=\"setDriver()\">Asignar Repartidor</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng2-toasty></ng2-toasty>","import { Component, OnInit } from '@angular/core';\nimport { ApisService } from '../services/apis.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UtilService } from \"src/app/services/util.service\";\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\nimport { Location } from '@angular/common';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-orderdriver',\n  templateUrl: './orderdriver.component.html',\n  styleUrls: ['./orderdriver.component.scss']\n})\nexport class OrderdriverComponent implements OnInit {\n  id: any;\n  grandTotal: any;\n  orders: any = [];\n  serviceTax: any;\n  status: any;\n  time: any;\n  total: any;\n  uid: any;\n  address: any;\n  restName: any;\n  deliveryAddress: any;\n  paid: any;\n  restPhone: any;\n  coupon: boolean = false;\n  dicount: any;\n  dname: any;\n  restCover: any;\n  username: any;\n  userpic: any;\n  userAddress: any;\n  refund: boolean;\n  payKey: any;\n  city: any = '';\n  cities: any;\n  dummy = Array(50);\n  drivers: any = [];\n  driver: any;\n  dummyDrivers: any = [];\n  driversByCity: any = [];\n  driverToken: any;\n  constructor(\n    private api: ApisService,\n    private util: UtilService,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private toastyService: ToastyService,\n    private navCtrl: Location\n  ) {\n    this.route.queryParams.subscribe(data => {\n      console.log(data);\n      if (data && data.id) {\n        this.id = data.id;\n        this.getOrder();\n        this.getUsers();\n        this.getCity();\n\n      }\n    });\n  }\n  getOrder() {\n    this.spinner.show();\n    console.log(\"idd\", this.id)\n    this.api.getOrderById(this.id).then(data => {\n      this.spinner.hide();\n      console.log(data);\n      if (data) {\n        this.grandTotal = data.grandTotal;\n        this.orders = JSON.parse(data.order);\n        this.serviceTax = data.serviceTax;\n        this.status = data.status;\n        this.time = data.time;\n        if (data && data.dId && data.dId.fullname) {\n          this.dname = data.dId.fullname || '';\n        }\n        if (data.dId && data.dId.id) {\n          this.driver = data.dId.id; // Establece el driver seleccionado por defecto\n        }\n        this.username = data.uid.fullname || '';\n        this.userpic = data.uid && data.uid.cover ? data.uid.cover : 'assets/icon.png';\n        this.userAddress = data.address.address;\n        this.restCover = data.vid.cover;\n        this.total = data.total;\n        this.address = data.vid.address;\n        this.restName = data.vid.name;\n        this.deliveryAddress = data.address.address;\n        this.paid = data.paid;\n        console.log('this', this.orders);\n        this.coupon = data.appliedCoupon;\n        this.dicount = data.dicount;\n        if (data && data.paykey && data.paid !== 'paypal') {\n          this.refund = true;\n          this.payKey = data.paykey;\n        } else {\n          this.refund = false;\n        }\n      }\n    }).catch(error => {\n      this.spinner.hide();\n      console.log(error);\n    });\n  }\n\n  ngOnInit() {\n  }\n  getDate(date) {\n    return moment(date).format('llll');\n  }\n\n  refundIt() {\n    console.log('id', this.id, this.refund, this.payKey);\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('to reject and refund this order?'),\n      backdrop: false,\n      background: 'white',\n      confirmButtonText: this.api.translate('Reject & Refund'),\n      cancelButtonText: this.api.translate('Cancel'),\n      showConfirmButton: true,\n      showCancelButton: true,\n      icon: 'question'\n    }).then((data) => {\n      console.log(data);\n      if (data && data.value) {\n        console.log('->delete');\n        this.spinner.show();\n        this.api.updateOrderStatus(this.id, 'rejected').then((data: any) => {\n          const param = {\n            charge: this.payKey,\n          };\n          this.api.httpPost('https://api.stripe.com/v1/refunds', param).subscribe((data) => {\n            console.log(data);\n            Swal.fire({\n              title: this.api.translate('Success'),\n              text: this.api.translate('Order refund successfully'),\n              icon: 'success',\n            });\n            this.navCtrl.back();\n          }, error => {\n            console.log(error);\n            this.spinner.hide();\n            console.log();\n            if (error && error.error && error.error.error && error.error.error.message) {\n              this.error(error.error.error.message);\n              return false;\n            }\n            this.error(this.api.translate('Something went wrong'));\n          });\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n          this.error(this.api.translate('Something went wrong'));\n        });\n      }\n\n    });\n\n  }\n\n  error(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Error'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.error(toastOptions);\n  }\n  success(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Success'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.success(toastOptions);\n  }\n\n  reject() {\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('to reject this order?'),\n      backdrop: false,\n      background: 'white',\n      confirmButtonText: this.api.translate('Reject'),\n      cancelButtonText: this.api.translate('Cancel'),\n      showConfirmButton: true,\n      showCancelButton: true,\n      icon: 'question'\n    }).then((data) => {\n      console.log(data);\n      if (data && data.value) {\n        console.log('->delete');\n        this.spinner.show();\n        this.api.updateOrderStatus(this.id, 'rejected').then((data: any) => {\n          this.spinner.hide();\n          Swal.fire({\n            title: this.api.translate('Success'),\n            text: this.api.translate('Order rejected successfully'),\n            icon: 'success',\n          });\n          this.navCtrl.back();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n          this.error(this.api.translate('Something went wrong'));\n        });\n      }\n\n    });\n  }\n\n  getCity() {\n    this.api.getCities().then(data => {\n      console.log(data);\n      this.cities = data;\n      this.city = data[0].id;\n      this.changeDrivers(this.city);\n      this.dummy = [];\n    }).catch(error => {\n      console.log(error);\n      this.dummy = [];\n    });\n  }\n\n\n  getUsers() {\n    this.drivers = [];\n    this.dummyDrivers = [];\n    this.driversByCity = [];\n    this.api.getUsers().then((data) => {\n\n      console.log('users data', data);\n      data.forEach(element => {\n        if (element.type === 'delivery') {\n          this.drivers.push(element);\n          this.dummyDrivers.push(element);\n        }\n      });\n      console.log(this.drivers);\n    }, error => {\n      console.log(error);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getCurrency() {\n    return this.api.getCurrecySymbol();\n  }\n\n  changeDrivers(city) {\n    console.log(\"Drivers\", this.drivers)\n    console.log(\"city\", this.city)\n    this.driversByCity = []\n    this.drivers.forEach(element => {\n      if (element.city === city && element.isActive) {\n        this.driversByCity.push(element);\n\n      }\n\n\n    });\n    setTimeout(() => {\n      if (this.driversByCity.length > 0) {\n        console.log(this.driversByCity)\n        this.driver = this.driversByCity[0].id\n        this.driverToken = this.driversByCity[0].fcm_token\n      }\n    }, 500)\n  }\n\n\n  setDriver() {\n\n    const param = {\n      driverId: this.driver,\n      status: \"accepted\"\n    };\n    const value = \"accepted\";\n\n    console.log(param)\n    this.api\n      .updateOrder(this.id, param)\n      .then(data => {\n\n        const parm = {\n          current: \"busy\"\n        };\n        this.api\n          .updateProfile(this.driver, parm)\n          .then(data => {\n            console.log(data);\n          })\n          .catch(error => {\n            console.log(error);\n          });\n        if (this.drivers[0] && this.drivers[0].fcm_token !== \"\") {\n          this.api\n            .sendNotification2(\n              \"New Order Received \",\n              \"New Order\",\n              this.driverToken\n            )\n            .subscribe(\n              data => {\n                console.log(\"send notifications\", data);\n              },\n              error => {\n                console.log(error);\n              }\n            );\n        }\n\n\n        console.log(\"data\", data);\n        const msg =\n          \"Your Order is \" +\n          value +\n          \" By \" +\n          this.restName;\n\n        Swal.fire({\n          title: \"success\",\n          text: \"Order status changed to \" + value,\n          icon: \"success\",\n          timer: 2000,\n          backdrop: false,\n          background: \"white\"\n        });\n        this.navCtrl.back();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderdriverRoutingModule } from './orderdriver-routing.module';\nimport { OrderdriverComponent } from './orderdriver.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [OrderdriverComponent],\n  imports: [\n    CommonModule,\n    OrderdriverRoutingModule,\n    SharedModule,\n    NgxSpinnerModule\n  ]\n})\nexport class OrderdriverModule { }\n","import { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  report: any;\n  constructor(\n\n    private translateService: TranslateService\n  ) { }\n\n  translate(str) {\n    const currentLang = this.translateService.currentLang;\n    const returnValue = this.translateService.translations[currentLang][str];\n    if (returnValue === undefined) {\n      return this.translateService.translations.en_merch[str];\n    } else {\n      return returnValue;\n    }\n  }\n  setReport(data) {\n    this.report = data;\n  }\n\n  \n  getReport() {\n    return this.report;\n  }\n\n  getCurrencyCode() {\n    return environment.general.code;\n  }\n\n  getCurrecySymbol() {\n    return environment.general.symbol;\n  }\n  makeid(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n"],"sourceRoot":"webpack:///"}