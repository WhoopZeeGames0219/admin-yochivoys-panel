{"version":3,"sources":["./src/app/drivers/drivers-routing.module.ts","./src/app/drivers/drivers.component.html","./src/app/drivers/drivers.component.ts","./src/app/drivers/drivers.module.ts"],"names":[],"mappings":"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","file":"drivers-drivers-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DriversComponent } from './drivers.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DriversComponent,\n    data: {\n      breadcrumb: 'Drivers'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DriversRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n    <p style=\"font-size: 20px; color: #e74c3c\">{{'Please wait...' | translate}}</p>\n</ngx-spinner>\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card\" id=\"card\">\n            <div class=\"card-body d-flex justify-content-between align-items-center\">\n                <h5>{{'All Drivers' | translate}} </h5>\n                <div class=\"d-flex\" style=\"gap: 10px;\">\n                    <button style=\"float: right;\" type=\"button\" (click)=\"createNew()\"\n                        class=\"btn btn-danger rounded font-weight-bold\">{{'Nuevo Repartidor' | translate}}</button>\n                    <button class=\"btn btn-warning rounded text-dark font-weight-bold\" (click)=\"generateReport()\">\n                        {{ 'Generar Reporte' | translate }}\n                    </button>\n                </div>\n            </div>\n            <div class=\"card-body reset-table p-t-0\">\n                <div class=\"form-group row d-flex justify-content-start align-items-center\">\n                    <div class=\"col-sm-5\">\n                        <input type=\"text\" class=\"form-control\"\n                            [placeholder]=\"('Search Driver' | translate) || '&nbsp;'\"\n                            (input)=\"search($event.target.value)\">\n                    </div>\n                </div>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr class=\"text-uppercase\">\n                                <th>{{'Cover' | translate}}</th>\n                                <th>{{'Name' | translate}}</th>\n                                <th>{{'Email' | translate}}</th>\n                                <th>{{'Phone' | translate}}</th>\n                                <th>{{'Status' | translate}}</th>\n                                <th>{{'Action' | translate}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of dummy\">\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                    'border-radius': '5px',\n                                    height: '10px',\n                                    border: '1px solid white'\n                                    }\"></ngx-skeleton-loader>\n                                </td>\n                                <td>\n                                    <ngx-skeleton-loader count=\"1\" [theme]=\"{ \n                                        'border-radius': '5px',\n                                        height: '10px',\n                                        border: '1px solid white'\n                                        }\"></ngx-skeleton-loader>\n                                </td>\n                            </tr>\n                            <tr *ngFor=\"let item of drivers;let i = index\">\n                                <td><a href=\"javascript:;\"><img class=\"img-responsive\"\n                                            style=\"height: 40px;border-radius: 50%;object-fit:cover;\"\n                                            [src]=\"item.coverImage\" onError=\"this.src='assets/images/user.png'\"\n                                            alt=\"chat-user\"></a>\n                                </td>\n                                <td>\n                                    <label style=\"font-weight: bold;\"> {{item.fullname}} </label>\n                                </td>\n                                <td>\n                                    {{item.email}}\n                                </td>\n                                <td>\n                                    {{item.phone}}\n                                </td>\n                                <td><button type=\"button\" (click)=\"changeStatus(item)\"\n                                        [className]=\"getClass(item.status)\">{{item.status | translate}}</button>\n                                </td>\n                                <td><button type=\"button\" (click)=\"openDriver(item)\"\n                                        class=\"btn btn-primary rounded font-weight-bold\">{{'View' |\n                                        translate}}</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApisService } from '../services/apis.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-drivers',\n  templateUrl: './drivers.component.html',\n  styleUrls: ['./drivers.component.css']\n})\nexport class DriversComponent implements OnInit {\n  drivers: any = [];\n  dummy = Array(10);\n  dummyDrivers: any = [];\n  searchQuery: string = ''; // Valor del input de búsqueda\n  cities: any = [];\n  constructor(\n    private api: ApisService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private http: HttpClient\n  ) {\n    this.getUsers();\n  }\n\n  ngOnInit() {\n  }\n\n  getUsers() {\n    this.drivers = [];\n    this.dummyDrivers = [];\n    this.cities = [];\n    this.api.getUsers().then((data) => {\n      this.dummy = [];\n      console.log('users data', data);\n      data.forEach(element => {\n        if (element.type === 'delivery') {\n          this.drivers.push(element);\n\n          this.dummyDrivers.push(element);\n        }\n\n      });\n      console.log(this.drivers);\n\n      // Obtener ciudades después de cargar usuarios\n      this.getCities();\n    }, error => {\n      this.dummy = [];\n      console.log(error);\n    }).catch(error => {\n      this.dummy = [];\n      console.log(error);\n    });\n  }\n\n  get driversWithCityNames() {\n    return this.drivers.map(driver => {\n      const city = this.cities.find(c => c.id === driver.city);\n      return {\n        ...driver,  // Conservamos las demás propiedades\n        cityName: city ? city.name : 'N/A'  // Agregamos el nombre de la ciudad\n      };\n    });\n  }\n\n  getCities() {\n    this.api.getCities().then((data) => {\n      this.cities = data; // Llenar la lista de ciudades\n    }).catch(error => {\n      console.log('Error al obtener las ciudades:', error);\n    });\n  }\n\n  search(string) {\n    this.searchQuery = string;\n    this.resetChanges();\n    console.log('string', string);\n    this.drivers = this.filterItems(string);\n  }\n\n\n  protected resetChanges = () => {\n    this.drivers = this.dummyDrivers;\n  }\n\n  setFilteredItems() {\n    console.log('clear');\n    this.drivers = [];\n    this.drivers = this.dummyDrivers;\n  }\n\n  filterItems(searchTerm) {\n    return this.drivers.filter((item) => {\n      return item.fullname.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n    });\n\n  }\n\n  createNew() {\n    const navData: NavigationExtras = {\n      queryParams: {\n        register: true\n      }\n    };\n    this.router.navigate(['admin-newdriver'], navData);\n  }\n  getClass(item) {\n    if (item === 'active') {\n      return 'btn btn-success rounded font-weight-bold';\n    } else if (item === 'deactive') {\n      return 'btn btn-danger rounded font-weight-bold';\n    }\n    return 'btn btn-warning rounded font-weight-bold';\n  }\n\n  changeStatus(item) {\n    const text = item.status === 'active' ? 'deactive' : 'active';\n    console.log(text);\n    Swal.fire({\n      title: this.api.translate('Are you sure?'),\n      text: this.api.translate('To ') + text + this.api.translate(' this driver!'),\n      icon: 'question',\n      showConfirmButton: true,\n      confirmButtonText: this.api.translate('Yes'),\n      showCancelButton: true,\n      cancelButtonText: this.api.translate('Cancel'),\n      backdrop: false,\n      background: 'white'\n    }).then((data) => {\n      if (data && data.value) {\n        console.log('update it');\n        item.status = text;\n        console.log(item);\n        this.spinner.show();\n        this.api.updateProfile(item.uid, item).then((data) => {\n          this.spinner.hide();\n          this.getUsers();\n        }, error => {\n          console.log(error);\n          this.spinner.hide();\n        }).catch(error => {\n          this.spinner.hide();\n          console.log(error);\n        });\n      }\n    });\n  }\n  openDriver(item) {\n    const navData: NavigationExtras = {\n      queryParams: {\n        id: item.uid,\n        register: false\n      }\n    };\n    this.router.navigate(['admin-newdriver'], navData);\n  }\n\n  generateReport() {\n    const doc = new jsPDF();\n\n    // Agregar título al reporte\n    doc.setFontSize(16);\n    doc.text('Reporte de Repartidores', 105, 10, { align: 'center' });\n    doc.setFontSize(12);\n    doc.text(`Filtro aplicado: \"${this.searchQuery || 'Todos los Repartidores'}\"`, 105, 20, { align: 'center' });\n\n    // Agregar la fecha actual alineada a la izquierda\n    doc.setFontSize(12);\n    const currentDate = new Date().toLocaleDateString() // Formato predeterminado\n    doc.text('Fecha: ' + currentDate, 10, 10); // Alineado a la izquierda\n\n    // Preparar datos para la tabla\n    const tableData = this.drivers.map(driver => {\n      const city = this.cities.find(c => c.id === driver.city); // Obtener el nombre de la ciudad\n      return [\n        driver.fullname,\n        driver.email,\n        driver.phone,\n        driver.status,\n        driver.descriptions,\n        city ? city.name : 'Ciudad no asignada'\n      ];\n    });\n\n    // Agregar la tabla al PDF\n    autoTable(doc, {\n      theme: 'grid',\n      startY: 30,\n      head: [['Nombre', 'Correo', 'Teléfono', 'Estado', 'Descripcion', 'Cuidad']],\n      headStyles: {\n        textColor: [0, 0, 0],\n      },\n      body: tableData,\n    });\n\n    // Guardar el archivo\n    this.http.get('assets/images/dashboard/yochivoy_logo.png', { responseType: 'blob' }).subscribe((blob) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64Image = reader.result as string;\n\n        // Agregar imagen al reporte\n        doc.addImage(base64Image, 'PNG', 175, 5, 30, 15); // Ajustar coordenadas y tamaño si es necesario\n\n        // Guardar el reporte\n        doc.save('reporte_usuarios.pdf');\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DriversRoutingModule } from './drivers-routing.module';\nimport { DriversComponent } from './drivers.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [DriversComponent],\n  imports: [\n    CommonModule,\n    DriversRoutingModule,\n    NgxSkeletonLoaderModule,\n    NgxSpinnerModule,\n    SharedModule\n  ]\n})\nexport class DriversModule { }\n"],"sourceRoot":"webpack:///"}